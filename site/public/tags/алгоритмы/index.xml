<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Алгоритмы on Перестроение бизнес процессов</title>
    <link>http://localhost:1313/tags/%D0%B0%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B/</link>
    <description>Recent content in Алгоритмы on Перестроение бизнес процессов</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Apr 2025 10:00:00 +0300</lastBuildDate><atom:link href="http://localhost:1313/tags/%D0%B0%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Итерация: Улучшаем алгоритмы, UI и планируем тесты</title>
      <link>http://localhost:1313/journal/post-10/</link>
      <pubDate>Wed, 09 Apr 2025 10:00:00 +0300</pubDate>
      
      <guid>http://localhost:1313/journal/post-10/</guid>
      
      <description>&lt;h1 id=&#34;работа-над-ошибками-и-подготовка-к-тестам&#34;&gt;Работа над ошибками и подготовка к тестам&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/iteration-refinement.jpg&#34; alt=&#34;Процесс улучшения - доска с задачами, схемы&#34;&gt;
&lt;em&gt;Итеративно улучшаем проект и готовимся к реальным тестам&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;После анализа обратной связи с первой демонстрации этот спринт был посвящен итеративным улучшениям и подготовке к следующему важному этапу – тестированию.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Над чем работали:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Доработка алгоритмов (Шаг 4):&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Исправили недочеты в логике аварийной остановки, выявленные во время симуляции.&lt;/li&gt;
&lt;li&gt;Оптимизировали псевдокод для циклов мойки и сушки, сделали его более читаемым.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Улучшение UI (Шаг 5):&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;На основе фидбэка доработали макеты обоих вариантов UI. Для бюджетного варианта упростили навигацию, для сенсорного – добавили больше визуальных подсказок.&lt;/li&gt;
&lt;li&gt;Провели небольшой опрос внутри команды (как мини-тест юзабилити), чтобы оценить удобство доработанных макетов.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Планирование тестирования (Шаг 6):&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Чек-лист:&lt;/strong&gt; Составили подробный чек-лист для тестирования будущего прототипа, включив функциональные тесты (разные ковры, проверка аварийных режимов), тест на надежность (24-часовой цикл) и оценку удобства UI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Тестовые образцы:&lt;/strong&gt; Подготовили тестовые образцы ковров (резиновый 1x1 м, текстильный с длинным ворсом), как и планировали.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GPT для генерации тестов:&lt;/strong&gt; Попробовали использовать GPT для генерации дополнительных тест-кейсов на основе нашего чек-листа и описания алгоритмов. Получились интересные граничные случаи, которые мы не учли.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;МАС для управления задачами:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Улучшили нашу Trello-доску, добавив метки для задач, связанных с разными &amp;ldquo;агентами&amp;rdquo; (требования, компоненты, алгоритмы, UI). Иван (координатор) создал простого &amp;ldquo;агента-напоминателя&amp;rdquo; (скрипт), который проверяет связи между задачами на доске (например, если меняется алгоритм, он напоминает проверить связанные UI элементы).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Почему важна итеративность:&lt;/strong&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Проектируем &#34;железо&#34; и алгоритмы: STM32, H-мосты и блок-схемы</title>
      <link>http://localhost:1313/journal/post-6/</link>
      <pubDate>Wed, 12 Mar 2025 10:00:00 +0300</pubDate>
      
      <guid>http://localhost:1313/journal/post-6/</guid>
      
      <description>&lt;h1 id=&#34;от-концепции-к-железу-и-логике&#34;&gt;От концепции к &amp;ldquo;железу&amp;rdquo; и логике&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/hw-algorithms-design.jpg&#34; alt=&#34;Электронная схема и блок-схема на экране&#34;&gt;
&lt;em&gt;Проектируем аппаратную часть и продумываем алгоритмы работы&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Этот спринт был посвящен &amp;ldquo;сердцу&amp;rdquo; и &amp;ldquo;мозгу&amp;rdquo; нашего аппарата: проектированию аппаратной платформы (Шаг 3) и разработке алгоритмов работы (Шаг 4). Параллельно мы думали, как концепции МАС могут помочь структурировать эту работу.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Проектирование аппаратной платформы (Шаг 3):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Контроллер:&lt;/strong&gt; Выбрали &lt;strong&gt;STM32F4&lt;/strong&gt;. Он достаточно мощный, имеет много периферии (ADC для аналоговых датчиков, GPIO для цифровых и энкодера) и считается надежным решением. (Дима)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Силовые цепи:&lt;/strong&gt; Продумали подключение основных исполнительных механизмов:
&lt;ul&gt;
&lt;li&gt;Двигатели щеток → H-мост &lt;strong&gt;L298N&lt;/strong&gt; (проверенное решение для управления моторами).&lt;/li&gt;
&lt;li&gt;ТЭНы (нагреватели) → Твердотельное реле &lt;strong&gt;SSR&lt;/strong&gt; (для коммутации больших нагрузок).&lt;/li&gt;
&lt;li&gt;Насосы → Обычные электромеханические реле. (Дима)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Подключение датчиков:&lt;/strong&gt; Спланировали, как аналоговые (термопара) и цифровые (энкодер, поплавок) датчики будут подключаться к ADC и GPIO контроллера.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Защита:&lt;/strong&gt; Предусмотрели базовую защиту: предохранители и TVS-диоды от скачков напряжения. (Дима)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Моделирование связей (МАС-идея):&lt;/strong&gt; Использовали наш прототип &amp;ldquo;Агента-Требований&amp;rdquo; и создали &amp;ldquo;Агента-Компонентов&amp;rdquo;. Теперь при выборе компонента (например, L298N) агент проверяет, соответствует ли он требованиям (например, по току двигателя), заданным в &amp;ldquo;Агенте-Требований&amp;rdquo;. Это помогает отлавливать несоответствия на раннем этапе.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Разработка алгоритмов работы (Шаг 4):&lt;/strong&gt;&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
